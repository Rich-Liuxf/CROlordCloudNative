server = "https://registry-1.docker.io"

[host."https://hub.uuuadc.top/"]
  capabilities = ["pull", "resolve", "push"]


  pipeline {
      agent any
      parameters {
          persistentString(name: 'BRANCH', defaultValue: 'main', description: 'Initial default branch: main')
          persistentString(name: 'GIT_REPOSITORY', defaultValue: 'https://github.com/Roliyal/CROlordCodelibrary.git', description: 'Git repository URL, default: https://github.com/Roliyal/CROlordCodelibrary.git')
          persistentString(name: 'MAJOR_VERSION', defaultValue: '1', description: 'Major version number, default: 1')
          persistentString(name: 'MINOR_VERSION', defaultValue: '0', description: 'Minor version number, default: 0')
          persistentString(name: 'BUILD_DIRECTORY', defaultValue: 'Chapter2KubernetesApplicationBuild/Unit2CodeLibrary/FEBEseparation/go-guess-number', description: 'Build directory path, default path: Chapter2KubernetesApplicationBuild/Unit2CodeLibrary/FEBEseparation/go-guess-number')
          persistentString(name: 'IMAGE_REGISTRY', defaultValue: 'crolord-uat-registry-vpc.cn-hongkong.cr.aliyuncs.com', description: 'Image registry address, default: crolord-uat-registry-vpc.cn-hongkong.cr.aliyuncs.com')
          persistentString(name: 'IMAGE_NAMESPACE', defaultValue: 'micro', description: 'Image namespace, default: micro')
          persistentString(name: 'SONARQUBE_DOMAIN', defaultValue: 'sonarqube.roliyal.com', description: 'SonarQube domain, default: sonarqube.roliyal.com')
          persistentString(name: 'SAE_CREDENTIALS_ID', defaultValue: 'your-sae-credentials-id', description: 'SAE AccessKey credentials ID')
          persistentString(name: 'SAE_NAMESPACE', defaultValue: 'cnbeta-hongkong:demo-1', description: 'SAE namespace, format: <RegionId>:<NamespaceId>')
          persistentString(name: 'APPLICATION_ID', defaultValue: '0d930603-f647-480c-94e7-a20642da1634', description: 'SAE Application ID')
          persistentString(name: 'ACR_ASSUME_ROLE_ARN', defaultValue: 'unchanging', description: 'ACR Assume Role ARN')
          persistentString(name: 'ACR_INSTANCE_ID', defaultValue: 'cri-dcvg4tjrhgptvs54', description: 'ACR Instance ID')
          persistentString(name: 'ARGS', defaultValue: 'unchanging', description: 'Arguments')
          persistentBoolean(name: 'ASSOCIATE_EIP', defaultValue: false, description: 'Associate EIP')
          persistentBoolean(name: 'AUTO_ENABLE_APPLICATION_SCALING_RULE', defaultValue: false, description: 'Auto Enable Application Scaling Rule')
          persistentString(name: 'CONFIG_MAP_MOUNT_DESC', defaultValue: 'unchanging', description: 'Config Map Mount Description')
          persistentString(name: 'CREDENTIALS_STRING', defaultValue: 'crolord : LTAI5t8Rcqi2xKi5kQzd85Xr', description: 'Credentials String')
          persistentString(name: 'CUSTOM_HOST_ALIAS', defaultValue: 'unchanging', description: 'Custom Host Alias')
          persistentString(name: 'EDAS_CONTAINER_VERSION', defaultValue: '', description: 'EDAS Container Version')
          persistentBoolean(name: 'ENABLE_AHAS', defaultValue: false, description: 'Enable AHAS')
          persistentBoolean(name: 'ENABLE_GREY_TAG_ROUTE', defaultValue: false, description: 'Enable Grey Tag Route')
          persistentBoolean(name: 'ENABLE_IMAGE_ACCL', defaultValue: true, description: 'Enable Image Acceleration')
          persistentString(name: 'ENVS', defaultValue: 'unchanging', description: 'Environment Variables')
          persistentBoolean(name: 'IMAGE', defaultValue: true, description: 'Image')
          persistentString(name: 'IMAGE_PULL_SECRETS', defaultValue: 'unchanging', description: 'Image Pull Secrets')
          persistentString(name: 'JAR_START_ARGS', defaultValue: 'unchanging', description: 'Jar Start Arguments')
          persistentString(name: 'JAR_START_OPTIONS', defaultValue: 'unchanging', description: 'Jar Start Options')
          persistentString(name: 'JDK', defaultValue: '', description: 'JDK')
          persistentString(name: 'KAFKA_CONFIGS', defaultValue: 'unchanging', description: 'Kafka Configurations')
          persistentString(name: 'LIVENESS', defaultValue: 'unchanging', description: 'Liveness')
          persistentString(name: 'NAS_ID', defaultValue: 'unchanging', description: 'NAS ID')
          persistentString(name: 'NAS_MOUNT_DESC', defaultValue: 'unchanging', description: 'NAS Mount Description')
          persistentString(name: 'NAS_MOUNT_HOST', defaultValue: 'unchanging', description: 'NAS Mount Host')
          persistentString(name: 'OSS_AK_ID', defaultValue: 'unchanging', description: 'OSS AK ID')
          persistentString(name: 'OSS_AK_SECRET', defaultValue: 'unchanging', description: 'OSS AK Secret')
          persistentString(name: 'OSS_MOUNT_DESC', defaultValue: 'unchanging', description: 'OSS Mount Description')
          persistentString(name: 'POST_START', defaultValue: 'unchanging', description: 'Post Start')
          persistentString(name: 'PRE_STOP', defaultValue: 'unchanging', description: 'Pre Stop')
          persistentString(name: 'READINESS', defaultValue: 'unchanging', description: 'Readiness')
          persistentString(name: 'SLS_CONFIGS', defaultValue: 'unchanging', description: 'SLS Configurations')
          persistentString(name: 'STARTUP_COMMAND', defaultValue: 'unchanging', description: 'Startup Command')
          persistentString(name: 'TARGET_OBJECT', defaultValue: 'crolord-uat-registry-vpc.cn-hongkong.cr.aliyuncs.com/micro/febe-sae-backend-pord:1.0.20', description: 'Target Object')
          persistentString(name: 'TIMEZONE', defaultValue: '', description: 'Timezone')
          persistentString(name: 'TOMCAT_CONFIG', defaultValue: 'unchanging', description: 'Tomcat Configuration')
          persistentString(name: 'UPDATE_STRATEGY', defaultValue: '', description: 'Update Strategy')
          persistentString(name: 'WAR_START_OPTIONS', defaultValue: 'unchanging', description: 'War Start Options')
          persistentString(name: 'WEB_CONTAINER', defaultValue: '', description: 'Web Container')
      }
      stages {
          stage('Hello') {
              steps {
              saeClient([
                  deploySAEApplication(
                      acrAssumeRoleArn: 'unchanging',
                      acrInstanceId: 'cri-dcvg4tjrhgptvs54',
                      appId: '0d930603-f647-480c-94e7-a20642da1634',
                      args: 'unchanging',
                      associateEip: false,
                      autoEnableApplicationScalingRule: false,

                      configMapMountDesc: 'unchanging',
                      credentialsString: 'crolord : LTAI5t8Rcqi2xKi5kQzd85Xr',
                      customHostAlias: 'unchanging',
                      edasContainerVersion: '',
                      enableAhas: false,
                      enableGreyTagRoute: false,
                      enableImageAccl: true,

                      envs: 'unchanging',
                      image: true,
                      imagePullSecrets: 'unchanging',
                      jarStartArgs: 'unchanging',
                      jarStartOptions: 'unchanging',
                      jdk: '',

                      kafkaConfigs: 'unchanging',
                      liveness: 'unchanging',
                      namespaceId: 'cnbeta-hongkong:demo-1',
                      nasId: 'unchanging',
                      nasMountDesc: 'unchanging',
                      nasMountHost: 'unchanging',

                      ossAkId: 'unchanging',
                      ossAkSecret: 'unchanging',
                      ossMountDesc: 'unchanging',
                      postStart: 'unchanging',
                      preStop: 'unchanging',
                      readiness: 'unchanging',

                      slsConfigs: 'unchanging',
                      startupCommand: 'unchanging',
                      targetObject: 'crolord-uat-registry-vpc.cn-hongkong.cr.aliyuncs.com/micro/febe-sae-backend-pord:1.0.20',
                      timezone: '',
                      tomcatConfig: 'unchanging',
                      updateStrategy: '',
                      warStartOptions: 'unchanging',
                      webContainer: ''
                  )
              ])
              }
          }

      }
  }